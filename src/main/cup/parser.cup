package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals
terminal ASSIG;
terminal PLUS;
terminal SUB;
terminal MULT;
terminal DIV;
terminal REST;
terminal MAYOR;
terminal LOWER;
terminal MAYOR_I;
terminal LOWER_I;
terminal EQUAL;
terminal NOT_EQUAL;
terminal AND_COND;
terminal OR_COND;
terminal NOT_COND;
terminal OPEN_BRACKET;
terminal CLOSE_BRACKET;
terminal OPEN_CURLY_BRACKET;
terminal CLOSE_CURLY_BRACKET;
terminal OPEN_SQUARE_BRACKET;
terminal CLOSE_SQUARE_BRACKET;
terminal COMMA;
terminal SEMI_COLON;
terminal DOT;
terminal DOUBLE_DOT;
terminal INTEGER_CONSTANT;
terminal FLOAT_CONSTANT;
terminal STRING_CONSTANT;
terminal INT;
terminal FLOAT;
terminal STRING;
terminal IF;
terminal ELSE;
terminal WHILE;
terminal WRITE;
terminal READ;
terminal String IDENTIFIER;
terminal INIT;

// Non Terminals
non terminal program;
non terminal block;
non terminal sentence;
non terminal var_declaration;
non terminal var_sencente_dec;
non terminal data_type;
non terminal id_list;
non terminal decition;
non terminal condition;
non terminal comparison;
non terminal comparator;
non terminal iterator;
non terminal assignment;
non terminal s_write;
non terminal s_read;
non terminal write_param;
non terminal read_param;
non terminal expression;
non terminal term;
non terminal factor;

// Start Symbol Definition
start with sentence;

sentence ::= assignment {: System.out.println("End"); :};
assignment ::= IDENTIFIER ASSIG expression {: System.out.println("Assignment"); :};
expression ::= expression PLUS term {: System.out.println("+"); :};
expression ::= expression SUB term {: System.out.println("-"); :};
expression ::= term {: System.out.println("Expression = Term"); :};
term ::= term MULT factor {: System.out.println("*"); :};
term ::= term DIV factor {: System.out.println("/"); :};
term ::= factor {: System.out.println("Term = factor"); :};
factor ::= IDENTIFIER:id  {: System.out.println("Id: " + id); :};
factor ::= INTEGER_CONSTANT:constant {: System.out.println("Constant: " + constant ); :};
factor ::= OPEN_BRACKET expression CLOSE_BRACKET {: System.out.println("Factor = (Expression)"); :};